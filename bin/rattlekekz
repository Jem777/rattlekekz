#!/usr/bin/env python
# -*- coding: utf-8 -*-

copyright = """
    Copyright 2008, 2009 Moritz Doll and Christian Scharkus

    This file is part of rattlekekz.

    rattlekekz is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    rattlekekz is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with rattlekekz.  If not, see <http://www.gnu.org/licenses/>.
"""

warranty = """
    15. Disclaimer of Warranty.

      THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
    APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
    HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
    OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
    IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
    ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

      16. Limitation of Liability.

      IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
    THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
    GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
    USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
    DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
    PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
    EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGES.

      17. Interpretation of Sections 15 and 16.

      If the disclaimer of warranty and limitation of liability provided
    above cannot be given local legal effect according to their terms,
    reviewing courts shall apply local law that most closely approximates
    an absolute waiver of all civil liability in connection with the
    Program, unless a warranty or assumption of liability accompanies a
    copy of the Program in return for a fee.
"""

copyright_short = """
rattlekekz  Copyright (C) 2008, 2009  Moritz Doll and Christian Scharkus
rattlekekz comes with ABSOLUTELY NO WARRANTY; for details run 'rattlekekz -w'.
rattlekekz is free software, and you are welcome to redistribute it
under certain conditions; run 'rattlekekz -c' for details.
"""

import sys, os, types, optparse

def initLogger():
    logfile=os.environ["HOME"]+os.sep+'.rattlekekz'+os.sep+'error.log'
    logpath=os.path.dirname(logfile)
    errlog = sys.stderr
    if os.path.isdir(logpath):
        errlog = open(logfile,'w')
    elif os.path.exists(logpath):
        pass # TODO: Raise exception if rattlekekz-dir is a file
    else:
        os.mkdir(logpath)
        errlog = open(logfile,'w')
    sys.stderr = errlog

def getOptions():
    parser = optparse.OptionParser(version = "%prog 0.99")
    parser.add_option("-H", "--host", dest = "host", default = "kekz.net", 
            help = "Host or IP to connect to, default is kekz.net", metavar = "HOST")
    parser.add_option("-l", "--localhost", dest = "host", action = "store_const", 
            const = "127.0.0.1", help = "connect to localhost")
    parser.add_option("-p", "--port", type = "int", dest = "port", default = 23002, 
            help = "Port to connect, default is 23002", metavar = "PORT")
    parser.add_option("-v", "--view", dest = "view", default = "cliView", 
            help = "select the frontend, default is cliView")
    parser.add_option("-c", "--copyright", action = "store_true", dest =
            "copyright", default = False)
    parser.add_option("-w", "--warranty", action = "store_true", dest =
            "warranty", default = False)
    parser.add_option("-n", "--nousercolors", action = "store_false", dest =
            "usercolors", default = True, help = "Turns of the colors of the userlist in the cliView")
    parser.add_option("-d", "--debug", action = "store_true", dest =
            "debug", default = False, help = "Enables the debug mode")
    parser.add_option("-t", "--timestamp", type = "int", dest =
            "timestamp", metavar = "TIMESTAMP", help = "Determines the timestampformat to be used")
    (_options, args) = parser.parse_args()
    options = toDict(_options)
    if options["warranty"] == True:
        print warranty
    elif options["copyright"] == True:
        print copyright
    else:
        del options["warranty"]
        del options["copyright"]
        return options 

def toDict(options):
    dictionary = {}
    empty_opts = optparse.Values()
    for key in dir(options):
        if not key in dir(empty_opts):
            value = getattr(options, key)
            dictionary[key] = value
    return dictionary

def startRattlekekz(host, port, view="cliView", kwds={}): 
    viewPath=view+"."+view
    try:
        viewModule=__import__("rattlekekz."+viewPath,fromlist=viewPath) #TODO find a better way
    except ImportError, arg:
        print arg
        sys.exit()
    if "View" in dir(viewModule) and type(viewModule.View) == types.ClassType:
        try:
            from rattlekekz.core import controller
        except ImportError, arg:
            print arg
        else:
            kekzControl=controller.KekzController(viewModule.View, kwds)
            kekzControl.view.startConnection(host, port)
    else:
        print 'Error: Nullpointer Exception'

def init():
    opts = getOptions() 
    if opts != None:
        initLogger()
        host = opts.pop("host")
        port = opts.pop("port")
        view = opts.pop("view")
        startRattlekekz(host, port, view, opts)

if __name__ == "__main__":
    init()
